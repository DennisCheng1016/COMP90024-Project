---
- hosts: 127.0.0.1
  become: yes
  vars:
    newnode: "{{ ansible_default_ipv4.address }}"

  tasks:
    - name: Gather facts
      setup:
    - name: Install Docker Python SDK
      pip:
        name: docker
        state: present

    - name: Check if Docker image exists
      docker_image_info:
        name: "ibmcom/couchdb3:{{ VERSION }}"
      register: image_info

    - name: Print image info
      debug:
        var: image_info

    - name: Pull CouchDB Docker image
      docker_image:
        name: "ibmcom/couchdb3:{{ VERSION }}"
        source: pull
      when: image_info.images | length == 0

    - name: Check if Docker container exists
      docker_container_info:
        name: "couchdb{{ newnode }}"
      register: container_info

    - name: Print container info
      debug:
        var: container_info

    - name: Remove existing Docker container
      docker_container:
        name: "couchdb{{ newnode }}"
        state: absent
      when: container_info.exists

    - name: Create and run CouchDB Docker container
      docker_container:
        name: "couchdb{{ newnode }}"
        image: "ibmcom/couchdb3:{{ VERSION }}"
        restart_policy: unless-stopped
        env:
          COUCHDB_USER: "{{ user }}"
          COUCHDB_PASSWORD: "{{ db_pass }}"
          COUCHDB_SECRET: "{{ cookie }}"
          ERL_FLAGS: '-setcookie "{{ cookie }}" -name "couchdb@{{ newnode }}"'
        ports:
          - "5984:5984"
          - "4369:4369"
          - "9100-9200:9100-9200"

    - name: Wait for CouchDB to start
      wait_for:
        host: "{{ newnode }}"
        port: 5984
        delay: 10

    - name: Test Connection using curl
      shell: >
        curl -X GET "http://{{ user }}:{{ db_pass }}@{{ masternode }}:5984/"
      register: response
      args:
        warn: no

    - name: Print connection result
      debug:
        msg: "{{ response }}"

    - name: Print add node details
      debug:
        msg:
          - "url: http://{{ user }}:{{ db_pass }}@{{ masternode }}:5984/_cluster_setup"
          - "action: add_node"
          - "host: {{ newnode }}"
          - "username: {{ user }}"
          - "password: {{ db_pass }}"

    - name: Add new node to cluster using curl
      shell: >
        curl -XPOST "http://{{ user }}:{{ db_pass }}@{{ masternode }}:5984/_cluster_setup" \
        --header "Content-Type: application/json" \
        --data "{\"action\": \"add_node\", \"host\":\"{{ newnode }}\", \"port\": \"5984\", \"username\": \"{{ user }}\", \"password\":\"{{ db_pass }}\"}"
      args:
        warn: no

    - name: Check cluster membership using curl
      shell: >
        curl -X GET "http://{{ user }}:{{ db_pass }}@{{ masternode }}:5984/_membership"
      register: membership_result
      args:
        warn: no

    - name: Print membership results
      debug:
        msg: "{{ membership_result }}"
